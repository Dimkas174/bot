const { Command } = require('discord.js-commando');

module.exports = class MicroCommand extends Command {
    constructor(client) {
        super(client, {
            name: 'micro',
            aliases: ['–º–∏–∫—Ä–æ'],
            group: 'admin',
            memberName: 'micro',
            description: '–ë–æ—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç —Ç–µ–∫—Å—Ç –≤ –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏.',
            examples: ['micro <–∏–º—è_–∫–∞–Ω–∞–ª–∞> <–ü—Ä–∏–≤–µ—Ç!> (–±–µ–∑ <>)'],
            guildOnly: true,
            clientPermissions: [
                'ADD_REACTIONS',
                'MANAGE_MESSAGES',
                'SEND_MESSAGES',
                'READ_MESSAGE_HISTORY'
            ],
            userPermissions: [
                'ADMINISTRATOR',
                'ADD_REACTIONS',
                'SEND_MESSAGES',
                'READ_MESSAGE_HISTORY'
            ],
            throttling: {
                usages: 2,
                duration: 60
            },
            args: [
				       {
					        key: 'channell',
					        prompt: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–∫–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞! \n–£ –≤–∞—Å –µ—Å—Ç—å 30 —Å–µ–∫—É–Ω–¥. –õ–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ \`cancel\` –¥–ª—è –æ—Ç–º–µ–Ω—ã!',
					        type: 'string',
					        validate: text => {
						      if (text.length < 2000) return true;
                        return '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2000 —Å–∏–º–≤–æ–ª–æ–≤!'
					       }
				       },
               {
                 key: 'text',
					        prompt: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏! \n–£ –≤–∞—Å –µ—Å—Ç—å 30 —Å–µ–∫—É–Ω–¥. –õ–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ \`cancel\` –¥–ª—è –æ—Ç–º–µ–Ω—ã!',
					        type: 'string',
					        validate: text => {
						      if (text.length < 2000) return true;
                        return '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2000 —Å–∏–º–≤–æ–ª–æ–≤!'
					       }
				       }
			       ]
        });
    }

    run(msg, { channell, text }) {
        msg.react('üì£');

        setTimeout(() => msg.delete(), 1000);

        return this.client.channels.find(c => c.id === channell).send(text);
    }
};