const { Command } = require('discord.js-commando'),
      { RichEmbed } = require('discord.js'),
      linkImg = /https?:\/\/.+\.(?:png|jpg|jpeg|gif)/gi;

module.exports = class GifavaCommand extends Command {
    constructor(client) {
        super(client, {
            name: 'gifava',
            aliases: ['–≥–∏—Ñ–∞–≤–∞'],
            group: 'utility',
            memberName: 'gifava',
            description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ –∫ –∞–∫–∞—É–Ω—Ç—É.',
            examples: ['gifava <—Å—Å—ã–ª–∫–∞ –Ω–∞ gif> (–±–µ–∑ <>)'],
            guildOnly: true,
            clientPermissions: [
                'ADD_REACTIONS',
                'MANAGE_MESSAGES',
                'SEND_MESSAGES',
                'READ_MESSAGE_HISTORY'
            ],
            userPermissions: [
                'ADD_REACTIONS',
                'SEND_MESSAGES',
                'READ_MESSAGE_HISTORY'
            ],
            throttling: {
                usages: 2,
                duration: 20
            },
            args: [
				{
					key: 'text',
					prompt: '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ gif! \n–£ –≤–∞—Å –µ—Å—Ç—å 30 —Å–µ–∫—É–Ω–¥. –õ–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ \`cancel\` –¥–ª—è –æ—Ç–º–µ–Ω—ã!',
					type: 'string',
					validate: text => {
						if (text.length < 2000) return true;
                        return '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2000 —Å–∏–º–≤–æ–ª–æ–≤!'
                    }
				}
			]
        });
    }

    async run(msg, { text }) {
        msg.react('üëå');
        setTimeout(() => msg.delete(), 1000);
      
      if (text.match(linkImg)) {
        if(!this.client.info.has(`${msg.author.id}`)) {
            this.client.info.set(`${msg.author.id}`, {
               user: msg.author.id,
               gifava: text
            });
          
            let embed = new RichEmbed()
            .setColor('RANDOM')
            .setDescription(`–í –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ <@${msg.author.id}> `)
            .setImage(text)
            return msg.embed(embed);
          
        } else if (this.client.info.has(`${msg.author.id}`)) {
            this.client.info.set(`${msg.author.id}`, {
               user: msg.author.id,
               gifava: text
            });
          
            let embed = new RichEmbed()
            .setColor('RANDOM')
            .setDescription(`–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ <@${msg.author.id}> `)
            .setImage(text)
            return msg.embed(embed);
        }
        
      } else {
        var _message = await msg.say('–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å .gif, .png –∏–ª–∏ .jpg –≤ –∫–æ–Ω—Ü–µ! –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É —Å .gif –≤ –∫–æ–Ω—Ü–µ, —Ç.–∫. —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –≥–∏—Ñ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.');
        setTimeout(() => _message.delete(), 180000);
      }
    }
};