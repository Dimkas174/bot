const { Command } = require('discord.js-commando'),
      { stripIndents } = require('common-tags'),
      { RichEmbed } = require('discord.js'),
      words = require('../../assets/json/balda')

module.exports = class BaldaCommand extends Command {
    constructor(client) {
        super(client, {
            name: 'balda',
            aliases: ['–±–∞–ª–¥–∞', '–ø–∞–ª–∞—á', '–≤–∏—Å–µ–ª—å–Ω–∏—Ü–∞'],
            group: 'quiz',
            memberName: 'balda',
            description: '–£–≥–∞–¥–∞–π—Ç–µ —Å–ª–æ–≤–æ, —á—Ç–æ –±—ã —á–µ–ª–æ–≤–µ—á–∏–∫ –Ω–µ –±—ã–ª –ø–æ–≤–µ—à–µ–Ω.',
            examples: ['balda'],
            guildOnly: true,
            clientPermissions: [
                'ADD_REACTIONS',
                'MANAGE_MESSAGES',
                'SEND_MESSAGES',
                'EMBED_LINKS',
                'READ_MESSAGE_HISTORY'
            ],
            userPermissions: [
                'ADD_REACTIONS',
                'SEND_MESSAGES',
                'READ_MESSAGE_HISTORY'
            ],
            throttling: {
                usages: 2,
                duration: 10
            },
        });

		this.playing = new Set();
	}

	async run(msg) { 
    if (msg.guild.id === '548383798425813012') {
            if (msg.channel.id === '551009615077179402') {
		if (this.playing.has(msg.channel.id)) return msg.reply('–¢–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∏–≥—Ä–∞ –º–æ–∂–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ!');
		this.playing.add(msg.channel.id);
		try {
			const word = words[Math.floor(Math.random() * words.length)].toLowerCase();
			let points = 0;
			let displayText = null;
			let guessed = false;
			const confirmation = [];
			const incorrect = [];
			const display = new Array(word.length).fill('||‚ñë||');
			while (word.length !== confirmation.length && points < 6) {
        await msg.say(stripIndents`
					${displayText === null ? '–ú—ã –Ω–∞—á–∏–Ω–∞–µ–º!' : displayText ? 'üëç –•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞! üëç' : '‚ùå –ù–µ—Ç—É! ‚ùå'}
					${display.join(' ')}. 
          –ö–∞–∫—É—é –±—É–∫–≤—É –≤—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ?
					**–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –±—É–∫–≤—ã:** ${incorrect.join(', ') || '-'}
          \`\`\`
					_______
					|     |
					|     ${points > 0 ? 'üòµ' : ''}
					|    ${points > 2 ? '‚îå' : ' '}${points > 1 ? '()' : ''}${points > 3 ? '‚îê' : ''}
					|     ${points > 4 ? '/' : ''} ${points > 5 ? '\\' : ''}
					|
          |
          \`\`\`
        `);
				const filter = res => {
					const choice = res.content.toLowerCase();
					return res.author.id === msg.author.id && !confirmation.includes(choice) && !incorrect.includes(choice);
				};
				const guess = await msg.channel.awaitMessages(filter, {
					max: 1,
					time: 30000
				});
				if (!guess.size) {
					await msg.say('‚åõ –ò–∑–≤–∏–Ω–∏—Ç–µ! –í—Ä–µ–º—è –≤—ã—à–ª–æ! ‚åõ');
					break;
				}
				const choice = guess.first().content.toLowerCase();
				if (choice === 'end') break;
				if (choice.length > 1 && choice === word) {
					guessed = true;
					break;
				} else if (word.includes(choice)) {
					displayText = true;
					for (let i = 0; i < word.length; i++) {
						if (word.charAt(i) !== choice) continue; // eslint-disable-line max-depth
						confirmation.push(word.charAt(i));
						display[i] = word.charAt(i);
					}
				} else {
					displayText = false;
					if (choice.length === 1) incorrect.push(choice);
					points++;
				}
			}
			this.playing.delete(msg.channel.id);
			if (word.length === confirmation.length || guessed) return msg.say(`üéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –≠—Ç–æ –±—ã–ª–æ —Å–ª–æ–≤–æ: **${word}**! üéâ`);
			return msg.say(`ü§∑ –û—á–µ–Ω—å –ø–ª–æ—Ö–æ... –≠—Ç–æ –±—ã–ª–æ —Å–ª–æ–≤–æ: **${word}**... ü§∑`);
		} catch (err) {
			this.playing.delete(msg.channel.id);
			console.log(err.stack);
			return msg.reply(`ü§∑ –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞! ü§∑`);
		}
              } else {
                setTimeout(() => msg.delete(), 1000);
                var _message = await msg.say(msg.author + ` **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–Ω–∞–ª <#551009615077179402> –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã!**`)
                setTimeout(() => _message.delete(), 60000);
            }
      } else {
         msg.reply(`ü§∑ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –µ—â—ë –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤. –ù–∞–ø–æ–º–Ω–∏—Ç–µ –µ–º—É! ü§∑`);
      }
	}
};